---
services:
  app:
    image: andreikvetinskii/docker-apiserver:latest
    container_name: ps-app
    depends_on:
      postgresql:
        condition: service_healthy
    restart: always
    networks:
      - http-rest-api_bridge
    ports:
      - 8080:8080
    volumes:
      - ./log:/logs:rw

  postgresql:
    image: postgres:14-alpine
    container_name: ps-psql
    environment:
      - POSTGRES_DB=restapi_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    networks:
      - http-rest-api_bridge
    ports:
      - 5433:5432
    # you need to uncomment two next string if you want to keep data after restart
    # volumes:
    #   - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  migrate:
    image: migrate/migrate:v4.15.2
    profiles: ["tools"]
    volumes:
      - ./migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://postgres:postgres@postgresql:5432/restapi_dev?sslmode=disable",
      ]
    command: ["up"]
    depends_on:
      postgresql:
        condition: service_healthy
    restart: on-failure
    networks:
      - http-rest-api_bridge
networks:
  http-rest-api_bridge:
    name: http-rest-api_bridge
